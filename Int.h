#pragma once
#include <vector>
#include <string>
#include <sstream>
#include <iomanip>

/// <summary>
/// Convert an int to 4 individual bytes
/// </summary>
/// <param name="i">The int to convert</param>
/// <returns>Vector containing the generated bytes</returns>
static std::vector<unsigned char> IntToBytes(int i)
{
	std::vector<unsigned char> v;
	unsigned char c[sizeof(int)];
	std::memcpy(c, &i, sizeof(int));
	for (int i = 0; i < sizeof(int); i++) v.push_back(c[i]);
	return v;
}

/// <summary>
/// Convert bytes into an integer
/// </summary>
/// <param name="bytes">The bytes to convert</param>
/// <returns>The generated int</returns>
static int BytesToInt(unsigned char* v)
{
	unsigned char bytes[sizeof(int)]{};
	for (int i = 0; i < sizeof(int); i++) bytes[i] = v[i];

	int value;
	std::memcpy(&value, bytes, sizeof(int));

	return value;
}

static std::string GetHex(int i, int filler = 2)
{
	std::stringstream ss;
	ss << std::hex << std::setw(filler) << std::setfill('0') << i;
	return ss.str();
}