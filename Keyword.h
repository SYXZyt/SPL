#pragma once
#include <map>

#include "String"

enum SPL_KEYWORDS
{
	KWD_PRINT,
	KWD_PRINTLN,
	KWD_LET,
	KWD_CONST,
	KWD_GOTO,
	KWD_EXIT,
	KWD_PUSH,
	KWD_POP,
	KWD_SETPOP,
	KWD_ADD,
	KWD_SUB,
	KWD_MUL,
	KWD_DIV,
	KWD_POW,
	KWD_CAST_FLOAT,
	KWD_CAST_INT,
	KWD_CAST_STRING,
	KWD_FREE,
	KWD_CONCAT,
	KWD_CALL,
	KWD_RET,
	KWD_EQU,
	KWD_NEQ,
	KWD_GRT,
	KWD_GRT_EQU,
	KWD_LWR,
	KWD_LWR_EQU,
	KWD_INC,
	KWD_DEC,
	KWD_INPUT,
	KWD_MOD,
	KWD_CONSOLE,
	KWD_SLEEP,
	KWD_RANDOM,
	KWD_RAISE,

	CNS_SETPOS,
	CNS_CLEAR,
	CNS_SETCOLOR,
	CNS_TITLE,
	CNS_CURSOR,
};

static std::map<const SPL_KEYWORDS, std::string> Keywords
{
	{KWD_PRINT, "print"},
	{KWD_PRINTLN, "println"},
	{KWD_LET, "let"},
	{KWD_CONST, "const"},
	{KWD_GOTO, "goto"},
	{KWD_EXIT, "exit"},
	{KWD_PUSH, "push"},
	{KWD_POP, "pop"},
	{KWD_SETPOP, "setpop"},
	{KWD_ADD, "add"},
	{KWD_SUB, "sub"},
	{KWD_MUL, "mul"},
	{KWD_DIV, "div"},
	{KWD_POW, "pow"},
	{KWD_CAST_FLOAT, "to_float"},
	{KWD_CAST_INT, "to_int"},
	{KWD_CAST_STRING, "to_string"},
	{KWD_FREE, "free"},
	{KWD_CONCAT, "concat"},
	{KWD_CALL, "call"},
	{KWD_RET, "ret"},
	{KWD_EQU, "equ"},
	{KWD_NEQ, "neq"},
	{KWD_GRT, "grt"},
	{KWD_GRT_EQU, "grt_equ"},
	{KWD_LWR, "lwr"},
	{KWD_LWR_EQU, "lwr_equ"},
	{KWD_INC, "inc"},
	{KWD_DEC, "dec"},
	{KWD_INPUT, "input"},
	{KWD_MOD, "mod"},
	{KWD_CONSOLE, "console"},
	{KWD_SLEEP, "sleep"},
	{KWD_RANDOM, "random"},
	{KWD_RAISE, "raise"},
	
	{CNS_SETPOS, "setpos"},
	{CNS_CLEAR, "clear"},
	{CNS_SETCOLOR, "setcolor"},
	{CNS_TITLE, "title"},
	{CNS_CURSOR, "cursor"},
};